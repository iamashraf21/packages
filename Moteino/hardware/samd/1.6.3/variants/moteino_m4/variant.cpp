/*
  Copyright (c) 2014-2015 Arduino LLC.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/

#include "variant.h"

/*
 * Pins descriptions
 */
const PinDescription g_APinDescription[]=
{
  // 0..11 - Analog capable pins
  { PORTB,  0, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel12, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { PORTB,  1, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel13, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { PORTA,  2, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel0, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_2 },
  { PORTA,  3, PIO_ANALOG, PIN_ATTR_ANALOG, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_3 },
  { PORTA,  4, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel4, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { PORTA,  5, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel5, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_5 },
  { PORTB,  6, PIO_ANALOG, PIN_ATTR_ANALOG_ALT, ADC_Channel8, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_6 },
  { PORTB,  7, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel9, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { PORTB,  8, PIO_SERCOM_ALT, PIN_ATTR_ANALOG, ADC_Channel0, TC4_CH0, TC4_CH0, EXTERNAL_INT_8 },
  { PORTB,  9, PIO_SERCOM_ALT, PIN_ATTR_ANALOG, ADC_Channel1, TC4_CH1, TC4_CH1, EXTERNAL_INT_9 },
  { PORTA,  10, PIO_COM, PIN_ATTR_ANALOG, ADC_Channel10, TCC0_CH2, TCC0_CH2, EXTERNAL_INT_10 },
  { PORTA,  11, PIO_COM, PIN_ATTR_ANALOG, ADC_Channel11, TCC0_CH3, TCC0_CH3, EXTERNAL_INT_11 },

  // 12..Digital functions
  { PORTA,  12, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC0_CH6, TCC0_CH6, EXTERNAL_INT_12 },
  { PORTA,  13, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TC2_CH1, TCC0_CH7, EXTERNAL_INT_13 },  
  { PORTB,  14, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TC5_CH0, TC5_CH0, EXTERNAL_INT_14 },
  { PORTB,  15, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TC5_CH1, TC5_CH1, EXTERNAL_INT_15 },  
  { PORTA,  16, PIO_SERCOM, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC1_CH0, TC2_CH0, EXTERNAL_INT_NONE },
  { PORTA,  17, PIO_SERCOM, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC1_CH1, TC2_CH1, EXTERNAL_INT_NONE },  
  { PORTA,  18, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TC3_CH0, TC3_CH0, EXTERNAL_INT_2 },
  { PORTA,  19, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TC3_CH1, TC3_CH1, EXTERNAL_INT_NONE },
  { PORTA,  20, PIO_TIMER, (PIN_ATTR_DIGITAL|PIN_ATTR_PWM_F), No_ADC_Channel, TCC1_CH4, TCC0_CH0, EXTERNAL_INT_4 },

  // 21..23 MISO, SCK, MOSI (PIO_SERCOM = first ColumnC, PIO_SERCOM_ALT = ColumnD in Datasheet I/O multiplexing and Considerations Table)
  { PORTA,  21, PIO_SERCOM, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // MISO: SERCOM5.3
  { PORTA,  22, PIO_SERCOM_ALT, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // SCK: SERCOM5.1
  { PORTA,  23, PIO_SERCOM_ALT, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // MOSI: SERCOM5.0

  // 24..26 - USB_NEGATIVE and USB_POSITIVE, pin 26 does not exist
  { PORTA,  24, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // USB/DM
  { PORTA,  25, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // USB/DP
  { NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // USB/DP
  // 27..29 - Digital functions
  { PORTA,  27, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
  { NOT_A_PORT,  0, PIO_NOT_A_PIN, PIN_ATTR_NONE, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE }, // Unused
  // 30..31 Digital functions / Debug interface (SWD CLK and SWD IO)
  { PORTA,  30, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC2_CH0, TCC2_CH0, EXTERNAL_INT_NONE }, // SWD CLK
  { PORTA,  31, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC2_CH1, TCC2_CH1, EXTERNAL_INT_NONE }, // SWD IO

  // 32..34
  { PORTB,  17, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_1 },
  { PORTB,  16, PIO_DIGITAL, PIN_ATTR_PWM_F, No_ADC_Channel, TCC3_CH0, TC6_CH0, EXTERNAL_INT_0 },
  { PORTB,   2, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel14, TCC2_CH2, TCC2_CH2, EXTERNAL_INT_NONE },

  // 35..38
  { PORTA,  6, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel6, TC1_CH0, TC1_CH0, EXTERNAL_INT_6 },
  { PORTA,  7, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel7, TC1_CH1, TC1_CH1, EXTERNAL_INT_7 },
  { PORTA,  8, PIO_COM, PIN_ATTR_ANALOG_ALT, ADC_Channel2, TC0_CH0, TC0_CH0, EXTERNAL_INT_NMI },
  { PORTA,  9, PIO_COM, (PIN_ATTR_ANALOG|PIN_ATTR_PWM_G), ADC_Channel3, TCC1_CH5, TCC1_CH5, EXTERNAL_INT_9 },
  // 39..42
  { PORTB,  10, PIO_COM, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC0_CH4, TCC0_CH4, EXTERNAL_INT_NONE },
  { PORTB,  11, PIO_COM, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC0_CH5, TCC0_CH5, EXTERNAL_INT_NONE },
  { PORTB,  12, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC3_CH0, TCC3_CH0, EXTERNAL_INT_NONE },
  { PORTB,  13, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC3_CH1, TCC3_CH1, EXTERNAL_INT_NONE },
  // 43..46
  { PORTB,  30, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC4_CH0, TCC4_CH0, EXTERNAL_INT_NONE },
  { PORTB,  23, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { PORTB,  22, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { PORTB,  31, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, TCC4_CH1, TCC4_CH1, EXTERNAL_INT_NONE },
  // 47..49
  { PORTB,   4, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_NONE },
  { PORTB,   5, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_5 },
  { PORTB,   3, PIO_ANALOG, PIN_ATTR_ANALOG, ADC_Channel15, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_3 },

  //50..53
  { PORTA,  0, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_0 },
  { PORTA,  1, PIO_DIGITAL, PIN_ATTR_DIGITAL, No_ADC_Channel, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_1 },
  { PORTA,  14, PIO_DIGITAL, PIN_ATTR_PWM_F, No_ADC_Channel, TCC2_CH0, TCC1_CH2, EXTERNAL_INT_14 },
  { PORTA,  15, PIO_DIGITAL, PIN_ATTR_PWM_F, No_ADC_Channel, TCC2_CH1, TCC1_CH3, EXTERNAL_INT_15 },

  // ----------------------
  // 54 - 55 Alternate use of A2 and A5 (DAC output)
  { PORTA,  2, PIO_ANALOG, PIN_ATTR_ANALOG, DAC_Channel0, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_2 }, // DAC/VOUT[0]
  { PORTA,  5, PIO_ANALOG, PIN_ATTR_ANALOG, DAC_Channel1, NOT_ON_PWM, NOT_ON_TIMER, EXTERNAL_INT_5 }, // DAC/VOUT[1]
} ;

const void* g_apTCInstances[TCC_INST_NUM+TC_INST_NUM]={ TCC0, TCC1, TCC2, TCC3, TCC4, TC0, TC1, TC2, TC3, TC4, TC5 };
const uint32_t GCLK_CLKCTRL_IDs[TCC_INST_NUM+TC_INST_NUM] = { TCC0_GCLK_ID, TCC1_GCLK_ID, TCC2_GCLK_ID, TCC3_GCLK_ID, TCC4_GCLK_ID, TC0_GCLK_ID, TC1_GCLK_ID, TC2_GCLK_ID, TC3_GCLK_ID, TC4_GCLK_ID, TC5_GCLK_ID } ;

// Multi-serial objects instantiation
SERCOM sercom0( SERCOM0 ) ;
SERCOM sercom1( SERCOM1 ) ;
SERCOM sercom2( SERCOM2 ) ;
SERCOM sercom3( SERCOM3 ) ;
SERCOM sercom4( SERCOM4 ) ;
SERCOM sercom5( SERCOM5 ) ;

Uart Serial1( &sercom4, PIN_SERIAL1_RX, PIN_SERIAL1_TX, PAD_SERIAL1_RX, PAD_SERIAL1_TX ) ;

void SERCOM4_0_Handler()
{
  Serial1.IrqHandler();
}
void SERCOM4_1_Handler()
{
  Serial1.IrqHandler();
}
void SERCOM4_2_Handler()
{
  Serial1.IrqHandler();
}
void SERCOM4_3_Handler()
{
  Serial1.IrqHandler();
}
